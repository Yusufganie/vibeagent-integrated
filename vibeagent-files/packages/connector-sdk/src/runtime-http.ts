import type{ConnectorManifest,ConnectorRuntime,ExecuteParams}from'./index';export function httpRuntime(m:ConnectorManifest):ConnectorRuntime{return{async execute(id,p){const a=m.actions.find((x:any)=>x.id===id);if(!a)return{ok:false,error:`Unknown action ${id}`};const base=p.baseUrl||m.baseUrl||'';const url=base.replace(/\/$/,'')+(a.path||'');const method=a.method||'POST';const headers=Object.assign({},a.headers||{},p.headers||{});if(p.token)headers['Authorization']=`Bearer ${p.token}`;headers['content-type']=headers['content-type']||'application/json';const qs=p.query?'?'+new URLSearchParams(p.query as any).toString():'';try{const res=await fetch(url+qs,{method,headers,body:method==='GET'?undefined:JSON.stringify(p.input||{})});const text=await res.text();let data:any=text;try{data=JSON.parse(text)}catch{};if(!res.ok)return{ok:false,error:`HTTP ${res.status}: `+text};return{ok:true,data};}catch(e:any){return{ok:false,error:String(e)}}}}}